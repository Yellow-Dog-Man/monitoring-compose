version: '3.8'

networks:
  monitor-net:
    driver: bridge
services:
    grafana:
        image: grafana/grafana:10.3.0
        user: ${MY_UID}:${MY_GID}
        container_name: grafana
        volumes:
            - ./grafana/data:/var/lib/grafana:rw
            - ./grafana/provisioning:/etc/grafana/provisioning:rw
        restart: unless-stopped
        ports:
            - 3000:3000
        expose:
            - 3000
        networks:
            - monitor-net
        environment:
            GF_ANALYTICS_REPORTING_ENABLED: 'false'
            GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
            GF_AUTH_ANONYMOUS_ENABLED: 'true'
            GF_AUTH_ANONYMOUS_ORG_NAME: Resonite
            GF_SERVER_DOMAIN: metrics.yellowdogman.com

    prometheus:
        container_name: prometheus
        user: ${MY_UID}:${MY_GID}
        image: prom/prometheus:v2.36.2
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
        volumes:
            - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
            - ./prometheus/data:/prometheus:rw
            - ./prometheus/passwords:/etc/prometheus/passwords:ro
        restart: unless-stopped
        networks:
            - monitor-net
        ## Allow prometheus access to our other stacks via the host machine network
        ## TODO: best way to bridge two stacks together network wise?
        extra_hosts:
            - "host.docker.internal:host-gateway"

    uptime-kuma:
        container_name: uptime-kuma
        image: louislam/uptime-kuma:1
        restart: unless-stopped
        expose:
            - 3001
        ports:
            - 3001:3001
        networks:
            - monitor-net
        volumes:
            - ./uptime-kuma/data:/app/data:rw

    dmarc-exporter-resonite:
        image: jgosmann/dmarc-metrics-exporter:0.11.0
        user: ${MY_UID}:${MY_GID}
        container_name: dmarc-exporter-resonite
        restart: unless-stopped
        networks:
            - monitor-net
        expose:
            - 9797
        volumes:
            - './dmarc-reporting/resonite/dmarc-metrics-exporter.json:/etc/dmarc-metrics-exporter.json:ro'
            - './dmarc-reporting/resonite/metrics:/var/lib/dmarc-metrics-exporter:rw'

    resonite-json-exporter:
        image: quay.io/prometheuscommunity/json-exporter
        container_name: resonite-json-exporter
        user: ${MY_UID}:${MY_GID}
        restart: unless-stopped
        expose:
            - 7979
        volumes:
            - ./json-exporter/config.yml:/config.yml:ro
        command:
            - '--config.file=/config.yml'
        networks:
            - monitor-net

